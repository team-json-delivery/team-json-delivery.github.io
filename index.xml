<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Team JSON Delivery</title>
    <link>https://team-json-delivery.github.io/</link>
    <description>Recent content on Team JSON Delivery</description>
    <image>
      <title>Team JSON Delivery</title>
      <url>https://avatars.githubusercontent.com/u/144499008</url>
      <link>https://avatars.githubusercontent.com/u/144499008</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 May 2024 09:00:00 +0900</lastBuildDate>
    <atom:link href="https://team-json-delivery.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>쿠팡, 아마존, 알리와 같은 기업들은 결제 시스템을 어떻게 만드는걸까? </title>
      <link>https://team-json-delivery.github.io/posts/pay-system/</link>
      <pubDate>Sat, 25 May 2024 09:00:00 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/pay-system/</guid>
      <description>💸 결제 시스템은 정확히 무엇을 말하는걸까요?! 이번 블로그에서의 결제 시스템은 신용 카드, 은행 카드 등을 연동하여 결제 서비스를 제공하는 시스템을 말합니다. 요즘은 결제 시스템을 사용하시는 분들이 많기 때문에 &amp;lsquo;안정, 유연, 확장 가능&amp;rsquo;을 고려하여 시스템을 구축해야 합니다. 하지만 무엇보다도 &amp;lsquo;작은 실수로도 상당한 금액 손실이 발생&amp;rsquo;할 수 있다는 점을 간과해서는 안 됩니다. 💻 결제 시스템 흐름! 결제 시스템을 알기 위해서는 &amp;lsquo;대금 수신 흐름&amp;rsquo;을 알아야 합니다. 대금 수신 흐름 시스템 설계에서 필요한 주요 요소들이 있습니다.</description>
    </item>
    <item>
      <title>빠르고 정확한 실시간 게임 순위표 설계하기</title>
      <link>https://team-json-delivery.github.io/posts/%EC%8B%A4%EC%8B%9C%EA%B0%84_%EA%B2%8C%EC%9E%84_%EC%88%9C%EC%9C%84%ED%91%9C/</link>
      <pubDate>Wed, 10 Apr 2024 09:00:00 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/%EC%8B%A4%EC%8B%9C%EA%B0%84_%EA%B2%8C%EC%9E%84_%EC%88%9C%EC%9C%84%ED%91%9C/</guid>
      <description>실시간 게임 순위표 이번 글에서는 가상 면접 사례로 배우는 대규모 시스템 설계 기초 2 10장 실시간 게임 순위표를 소개하려고 합니다.
실시간 게임 순위표의 특징을 간단히 알아보고, 기본적인 요소를 설계해봅시다.
1. 실시간 게임 순위표 이해 및 설계 범위 확정하기 실시간 게임 순위표는 꽤 간단한 시스템으로 보입니다.
하지만, 복잡성을 더할 수 있는 여러 가지 문제가 있으므로 요구사항(특징)을 분명히 확인하는게 좋습니다.
1. 사용자는 경기에서 승리하면 포인트를 얻습니다. 2. 모든 플레이어가 순위표에 포함되어야 합니다. 3.</description>
    </item>
    <item>
      <title>웹 서비스 매출은 광고 원툴 아닌가요? 그럼 이것만 알면 되겠네!</title>
      <link>https://team-json-delivery.github.io/posts/ad-click-event/</link>
      <pubDate>Mon, 18 Mar 2024 09:00:00 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/ad-click-event/</guid>
      <description>대규모 광고 클릭 이벤트 집계 시스템 설계 디지털 광고 시장에서 RTB(Real Time Bidding)는 필수적인 프로세스입니다. 이를 통해 광고주는 실시간으로 광고 지면(inventory)을 거래하며, 이 과정에서 발생하는 광고 클릭 데이터의 정확한 집계는 매우 중요합니다. 본 문서에서는 페이스북이나 구글과 같은 대형 플랫폼에 적합한 광고 클릭 이벤트 집계 시스템의 설계 방안을 제안합니다.
광고 클릭 이벤트 집계 시스템과 디지털 광고 생태계의 상호작용 디지털 광고 생태계에서, 광고 클릭 이벤트 집계 시스템은 다양한 플레이어들과 상호작용합니다. 주요 엔터티로는 DSP(광고주 측에서 광고를 올리는 플랫폼), SSP(다양한 인벤토리를 판매할 수 있는 플랫폼), 그리고 광고 거래소가 있습니다.</description>
    </item>
    <item>
      <title>모니터링, 알람 그리고 장애들 😊</title>
      <link>https://team-json-delivery.github.io/posts/metric-service/</link>
      <pubDate>Sat, 09 Mar 2024 09:00:00 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/metric-service/</guid>
      <description>Team json delivery는 각자 다른 회사를 다니는 팀원들로 구성되어 있어요.
게임, IT, 금융, 제조업 까지 없는곳이 없어요!
어쩌면 도메인 별로 차이가 있을까요?
모여서 각 회사에서는 어떻게 모니터링을 하고 장애를 관리하는지에 대해
이야기를 나누고 설계를 진행해 보았어요.
1. 🤔 장애가 뭔가요? 장애란, 우리가 쓰는 시스템이나 서비스가 제대로 작동하지 않는 상태를 말해요.
이런 문제는 네트워크가 느리거나 서버에 문제가 생기거나
데이터베이스가 이상한 등 다양한 이유로 생길 수 있어요.
DEVOPS와 microservice로 인한 모듈 파편화에 따라 이러한 모니터링, 또는 관측성이 더욱 중시되고 있어요!</description>
    </item>
    <item>
      <title>쓰지만 말고 직접 구현해보자! 분산 메시지큐!</title>
      <link>https://team-json-delivery.github.io/posts/%EB%B6%84%EC%82%B0-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90/</link>
      <pubDate>Tue, 27 Feb 2024 09:00:00 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/%EB%B6%84%EC%82%B0-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90/</guid>
      <description>쓰지만 말고 직접 구현해보자! 분산 메시지큐! MSA(Microservice Architecture)가 아키텍처 설계의 트랜드가 되면서 메시지 큐는 시스템 구성의 중요한 요소로 자리잡았습니다. 이번 글에서는 가상 면접 사례로 배우는 대규모 시스템 설계 기초 2 4장 분산 메시지 큐를 소개하려고 합니다.
분산 메시지 큐의 특징을 간단히 알아보고, 기본적인 요소를 설계해봅시다.
(메세지 큐를 구성하는 요소가 방대한 만큼 세부 개념에 대한 자세한 설명은 넘어가겠습니다.)
1. 메시지 큐 특징 알아보기 본격적인 설계에 앞서 메시지 큐의 기능을 생각해봅시다.
1. 프로듀서는 메시지 큐에 메시지를 보낼 수 있어야 합니다.</description>
    </item>
    <item>
      <title>내 근처에는 누가 살고 있을까? : 위치 기반 서비스 설계하기</title>
      <link>https://team-json-delivery.github.io/posts/nearby-service/</link>
      <pubDate>Sun, 18 Feb 2024 06:27:22 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/nearby-service/</guid>
      <description>오늘은 스터디원 분들과 가상 면접 사례로 배우는 대규모 시스템 설계 기초 2권 의 주변친구 챕터를 스터디를 하며 나눈 내용을 바탕으로 포스팅을 해보려 해요.
면접에서 주변 친구 서비스를 설계해 보라고 하면 어떻게 할까요?
문제를 이해하고 설계 범위를 확정하자 면접 상황에서는 문제를 이해하고 기능의 스펙을 최소화 하는데 집중해야 합니다.
국내 서비스 수준이 아닌 글로벌 서비스 수준의 설계를 원하는지, 주변 친구의 범위가 어느 정도인지, 채팅과 같은 부가기능을 지원해야 되는지에 대해서도 논의해 보면 좋아요. 면접 상황에서는 가급적 핵심 기능에 집중하고 면접관과 이해도를 맞추도록 해요.</description>
    </item>
    <item>
      <title>주변 맛집을 찾으려면 어떻게 해야 검색이 빠를까?</title>
      <link>https://team-json-delivery.github.io/posts/system-design-interview-proximity-service/</link>
      <pubDate>Tue, 06 Feb 2024 06:27:22 +0900</pubDate>
      <guid>https://team-json-delivery.github.io/posts/system-design-interview-proximity-service/</guid>
      <description>점심을 먹기 위해 지도 앱을 켜고 적당한 위치로 화면을 이동한 뒤 &amp;ldquo;맛집&amp;quot;이라는 키워드로 검색을 한다. 그러면 해당 지도 범위 안에 있는 식당들이 검색되고 지도상에 마커와 함께 어디에 어떤 식당이 있는지 한눈에 볼 수 있다. 그중 괜찮은 식당을 선택하면 해당 지점(이하 사업장)의 상세 정보를 확인할 수 있고 서비스에 따라 바로 예약을 할 수 있는 기능도 제공된다. 이러한 특정 범위(위도/경도 + 반경) 내에서 키워드 검색으로 지도상에 노출을 해주는 &amp;ldquo;근접성 서비스(proximity service)&amp;ldquo;는 여러 서비스들에서 사용자들의 편의를 위해 다양하게 활용된다.</description>
    </item>
  </channel>
</rss>
